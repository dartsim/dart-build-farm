# This is a basic workflow to help you get started with Actions

name: macOS

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      ref:
        description: "Branch/tag/commit"
        required: true
        default: dart7/main
      compiler:
        description: "Compiler: {gcc, clang}"
        required: true
        default: "clang"
      build_type:
        description: "Build type: {Release, Debug}"
        required: true
        default: "Release"
      build_dartpy:
        description: "Build dartpy: {ON, OFF}"
        required: true
        default: "ON"
  repository_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  manual_build:
    if: github.event_name == 'workflow_dispatch'

    # The name of jobs
    name: macos.${{ github.event.inputs.build_type }}

    # The type of runner that the job will run on
    runs-on: macos-latest

    env:
      COMPILER: ${{ github.event.inputs.compiler }}
      BUILD_TYPE: ${{ github.event.inputs.build_type }}
      BUILD_DARTPY: ${{ github.event.inputs.build_dartpy }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          repository: dartsim/dart
          ref: ${{ github.event.inputs.ref }}
      - name: Install Dependencies
        run: .ci/install_osx.sh
      - name: Build
        run: sudo -E .ci/build.sh

  triggered_by_dart:
    if: github.event_name == 'repository_dispatch'

    name: macos.${{ matrix.compiler }}.${{ matrix.build_type }}

    runs-on: macos-latest

    strategy:
      fail-fast: false
      matrix:
        compiler: [gcc, clang]
        build_type: [Debug, Release]
        build_dartpy: [ON]

    env:
      COMPILER: ${{ matrix.compiler }}
      BUILD_TYPE: ${{ matrix.build_type }}
      BUILD_DARTPY: ${{ matrix.build_dartpy }}

    steps:
      - name: Event Information
        run: |
          echo "Event '${{ github.event.action }}' received from '${{ github.event.client_payload.repository }}' (${{ github.event.client_payload.ref }})"

      - uses: actions/checkout@v2
        with:
          repository: dartsim/dart
          ref: ${{ github.event.client_payload.ref }}

      - name: Install Dependencies
        run: .ci/install_osx.sh

      - name: Build
        run: sudo -E .ci/build.sh
