# This is a basic workflow to help you get started with Actions

name: Ubuntu

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      ref:
        description: "Branch/tag/commit"
        required: true
        default: dart7/main
      os:
        description: "OS: {ubuntu-bionic, ubuntu-focal, ubuntu-impish}"
        required: true
        default: "ubuntu-focal"
      platform:
        description: "Platform architecture: {linux/amd64, linux/arm64, linux/ppc64le}"
        required: true
        default: "linux/amd64"
      compiler:
        description: "Compiler: {gcc, clang}"
        required: true
        default: "gcc"
      build_type:
        description: "Build type: {Release, Debug}"
        required: true
        default: "Release"
      build_dartpy:
        description: "Build dartpy: {ON, OFF}"
        required: true
        default: "ON"
  repository_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  manual_build:
    if: github.event_name == 'workflow_dispatch'

    # The name of jobs
    name: ${{ github.event.inputs.os }}.${{ github.event.inputs.platform }}.${{ github.event.inputs.build_type }}

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      # Hosted on: https://hub.docker.com/repository/docker/dartsim/dart-dev
      DART_DEV_IMAGE: dartsim/dart-dev
      DOCKER_TAG: ${{ github.event.inputs.os }}-v8.0
      PLATFORM: ${{ github.event.inputs.platform }}
      COMPILER: ${{ github.event.inputs.compiler }}
      BUILD_TYPE: ${{ github.event.inputs.build_type }}
      BUILD_DARTPY: ${{ github.event.inputs.build_dartpy }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # https://github.com/marketplace/actions/docker-setup-qemu
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          repository: dartsim/dart
          ref: ${{ github.event.inputs.ref }}

      - name: Pull dev container
        run: docker pull $DART_DEV_IMAGE:$DOCKER_TAG
      - name: Build
        run: |
          docker run \
            -e CI=true \
            --platform $PLATFORM \
            --volume $GITHUB_WORKSPACE:$GITHUB_WORKSPACE \
            --env-file ./.ci/docker/env.list \
            $DART_DEV_IMAGE:$DOCKER_TAG \
            /bin/sh -c "cd $GITHUB_WORKSPACE && ./.ci/build.sh"

  triggered_by_dart:
    if: github.event_name == 'repository_dispatch'

    name: ${{ matrix.image_tag }}.${{ matrix.platform }}.${{ matrix.compiler }}.${{ matrix.build_type }}

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        image_tag: [ubuntu-bionic-v8.0, ubuntu-focal-v8.0, ubuntu-impish-v8.0]
        platform: [linux/amd64]
        compiler: [gcc, clang]
        build_type: [Debug, Release]
        build_examples: [ON]
        build_tutorials: [ON]
        build_dartpy: [ON]
        test_installation: [ON]
        include:
          - image_tag: ubuntu-focal-v8.0-minimal
            platform: linux/amd64
            compiler: gcc
            build_type: Release
            build_examples: OFF
            build_tutorials: OFF
            build_dartpy: OFF
            test_installation: OFF
          - image_tag: ubuntu-focal-v8.0
            platform: linux/arm64
            compiler: gcc
            build_type: Release
            # Disabled examples, tutorials, and dartpy because build time exceeds 6 hours
            build_examples: OFF
            build_tutorials: OFF
            build_dartpy: OFF
            test_installation: ON
          - image_tag: ubuntu-focal-v8.0
            platform: linux/ppc64le
            compiler: gcc
            build_type: Release
            # Disabled examples, tutorials, and dartpy because build time exceeds 6 hours
            build_examples: OFF
            build_tutorials: OFF
            build_dartpy: OFF
            test_installation: ON

    env:
      # Hosted on: https://hub.docker.com/repository/docker/dartsim/dart-dev
      DART_DEV_IMAGE: dartsim/dart-dev
      DOCKER_TAG: ${{ matrix.image_tag }}
      PLATFORM: ${{ matrix.platform }}
      COMPILER: ${{ matrix.compiler }}
      BUILD_TYPE: ${{ matrix.build_type }}
      BUILD_EXAMPLES: ${{ matrix.build_examples }}
      BUILD_TUTORIALS: ${{ matrix.build_tutorials }}
      BUILD_DARTPY: ${{ matrix.build_dartpy }}
      TEST_INSTALLATION: ${{ matrix.test_installation }}

    steps:
      - name: Event Information
        run: |
          echo "Event '${{ github.event.action }}' received from '${{ github.event.client_payload.repository }}' (${{ github.event.client_payload.ref }})"

      - uses: actions/checkout@v2
        with:
          repository: dartsim/dart
          ref: ${{ github.event.client_payload.ref }}

      # https://github.com/marketplace/actions/docker-setup-qemu
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Pull dev container
        run: docker pull $DART_DEV_IMAGE:$DOCKER_TAG

      - name: Build
        run: |
          docker run \
            -e CI=true \
            --platform $PLATFORM \
            --volume $GITHUB_WORKSPACE:$GITHUB_WORKSPACE \
            --env-file ./.ci/docker/env.list \
            $DART_DEV_IMAGE:$DOCKER_TAG \
            /bin/sh -c "cd $GITHUB_WORKSPACE && ./.ci/build.sh"
